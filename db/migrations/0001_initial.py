# Generated by Django 2.2.8 on 2019-12-22 10:47

from django.conf import settings
import django.contrib.auth.models
from django.db import migrations, models
import django.db.models.deletion
import django.db.models.expressions


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0011_update_proxy_permissions'),
    ]

    operations = [
        migrations.CreateModel(
            name='Activity',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.CharField(choices=[('HW', 'Homework'), ('QZ', 'Quiz'), ('NT', 'Notification')], max_length=2)),
                ('title', models.TextField()),
                ('content', models.TextField()),
                ('create_date', models.DateTimeField(auto_now=True)),
                ('due_date', models.DateTimeField()),
            ],
        ),
        migrations.CreateModel(
            name='Class',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('class_name', models.CharField(max_length=200)),
                ('create_date', models.DateTimeField(auto_now=True)),
                ('info', models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name='Discuss',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200)),
                ('create_time', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='File',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('url', models.CharField(max_length=200)),
            ],
        ),
        migrations.CreateModel(
            name='Group',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('class_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='db.Class')),
            ],
        ),
        migrations.CreateModel(
            name='Problem',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('question', models.TextField()),
                ('type', models.CharField(choices=[('CH', 'Choice'), ('BK', 'Blank'), ('TX', 'Text'), ('FL', 'File')], max_length=2)),
                ('key', models.CharField(max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='Section',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('number', models.CharField(max_length=50)),
                ('name', models.CharField(max_length=50)),
                ('class_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='db.Class')),
            ],
        ),
        migrations.CreateModel(
            name='Submit',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('key', models.TextField()),
                ('file', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='db.File')),
                ('problem', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='db.Problem')),
            ],
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('user_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to=settings.AUTH_USER_MODEL)),
                ('info', models.TextField()),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            bases=('auth.user',),
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Admin',
            fields=[
                ('id', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to='db.User')),
                ('role', models.CharField(max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='Student',
            fields=[
                ('id', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to='db.User')),
                ('student_id', models.CharField(max_length=50)),
                ('dept', models.CharField(max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='TA',
            fields=[
                ('id', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to='db.User')),
                ('ta_id', models.CharField(max_length=50)),
                ('authority', models.BinaryField()),
            ],
        ),
        migrations.CreateModel(
            name='Teacher',
            fields=[
                ('id', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to='db.User')),
                ('teacher_id', models.CharField(max_length=50)),
                ('dept', models.CharField(max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='SubmitScore',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('score', models.CharField(max_length=10)),
                ('time', models.DateTimeField(auto_now=True)),
                ('rater', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='db.User')),
                ('submit', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='db.Submit')),
            ],
        ),
        migrations.CreateModel(
            name='SectionHasFile',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('file', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='db.File')),
                ('section', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='db.Section')),
            ],
        ),
        migrations.AddField(
            model_name='section',
            name='files',
            field=models.ManyToManyField(through='db.SectionHasFile', to='db.File'),
        ),
        migrations.AddField(
            model_name='section',
            name='subsection',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='db.Section'),
        ),
        migrations.CreateModel(
            name='Post',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('content', models.TextField()),
                ('create_time', models.DateTimeField(auto_now=True)),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='db.User')),
                ('discuss', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='db.Discuss')),
                ('reply', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='db.Post')),
            ],
        ),
        migrations.AddField(
            model_name='file',
            name='uploader',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='db.User'),
        ),
        migrations.AddField(
            model_name='discuss',
            name='author',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='db.User'),
        ),
        migrations.AddField(
            model_name='discuss',
            name='class_id',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='db.Class'),
        ),
        migrations.CreateModel(
            name='ActivityHasProblem',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('activity', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='db.Activity')),
                ('problem', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='db.Problem')),
            ],
        ),
        migrations.CreateModel(
            name='ActivityHasFile',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('activity', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='db.Activity')),
                ('file', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='db.File')),
            ],
        ),
        migrations.AddField(
            model_name='activity',
            name='author',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='db.User'),
        ),
        migrations.AddField(
            model_name='activity',
            name='class_id',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='db.Class'),
        ),
        migrations.AddField(
            model_name='activity',
            name='files',
            field=models.ManyToManyField(through='db.ActivityHasFile', to='db.File'),
        ),
        migrations.AddField(
            model_name='activity',
            name='problems',
            field=models.ManyToManyField(through='db.ActivityHasProblem', to='db.Problem'),
        ),
        migrations.CreateModel(
            name='TeachMembership',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_time', models.DateTimeField(auto_now=True)),
                ('class_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='db.Class')),
                ('teacher', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='db.Teacher')),
            ],
        ),
        migrations.CreateModel(
            name='TAMembership',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_time', models.DateTimeField(auto_now=True)),
                ('class_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='db.Class')),
                ('ta', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='db.TA')),
            ],
        ),
        migrations.AddField(
            model_name='submit',
            name='student',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='db.Student'),
        ),
        migrations.CreateModel(
            name='StudentMembership',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_time', models.DateTimeField(auto_now=True)),
                ('class_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='db.Class')),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='db.Student')),
            ],
        ),
        migrations.CreateModel(
            name='GroupMembership',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_time', models.DateTimeField(auto_now=True)),
                ('group', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='db.Group')),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='db.Student')),
            ],
        ),
        migrations.AddField(
            model_name='group',
            name='members',
            field=models.ManyToManyField(through='db.GroupMembership', to='db.Student'),
        ),
        migrations.AddField(
            model_name='class',
            name='students',
            field=models.ManyToManyField(through='db.StudentMembership', to='db.Student'),
        ),
        migrations.AddField(
            model_name='class',
            name='tas',
            field=models.ManyToManyField(through='db.TAMembership', to='db.TA'),
        ),
        migrations.AddField(
            model_name='class',
            name='teachers',
            field=models.ManyToManyField(through='db.TeachMembership', to='db.Teacher'),
        ),
        migrations.AddConstraint(
            model_name='activity',
            constraint=models.CheckConstraint(check=models.Q(due_date__gt=django.db.models.expressions.F('create_date')), name='check_due_time'),
        ),
    ]
